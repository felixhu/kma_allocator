.TH kma_bud
.SH NAME
kma_bud \- Implementation of the Buddy System for our kernel memory allocator
.SH DESCRIPTION
Buddy System: Allocating Memory

A header is allocated onto the first page, which manages all empty lists.
There are 9 empty lists, one for each power of two. The smallest block size
is 16 bytes. kma_malloc returns a block of memory equal to the smallest 
power of two that is larger than the requested memory. The largest possible
call to kma_malloc is PAGESIZE, which is 8192. 

kma_malloc first looks for empty blocks, and if there is none then a new page
is allocated and split accordingly. kma_free looks for free buddy blocks and
coalesces and adds to the list of empty blocks accordingly. If there is a free
block of size PAGESIZE, then the page is freed.

.SH DESIGN DECISIONS
We initially had a bitmap for each page in the buddy system, but we decided 
to go with a block header for each block. With the bitmap method, every page 
smaller than PAGESIZE/2 would have a 512 byte header. This is efficient when 
there are many smaller blocks, but otherwise block headers are more efficient. 
The initial page holds the header, which manages free blocks. Otherwise, each 
block has a block_t structure acting as its header.

.SH AUTHOR
Irsal Jasebel Alsanea, Patrick Hayes, Felix Hu
