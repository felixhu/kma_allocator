Evaluation Report for Project 2Group: fhh564+ija144+pjh693Evaluation report (DOC ) including your comparative analysis, as well as a description of any important design decisions you made while implementing the diï¬€erent allocation methods compared. Please makesure that these les are included in the handin.Resource Map:We decided to go with the first free algorithm. This is generally the fastest among the algorithms typically. Each page has a header containing the number of total pages in order to iterate through the headers without using a linked list. It also keeps track of the number of blocks allocated in the free list for each header, so that the page can be freed if it isn't storing anything. The free lists are kept track of by using a block structure, which keeps track of its own size and what page it came from. The free lists of blocks that are kept in each header are doubly linked for easy removal. When searching for free space, the first fit algorithm was used because it was easiest to implement, and is also the quickest in finding a fitBuddy System:We initially had a bitmap for the buddy system, but we decided to go with a block header for each block because with bitmaps for every page smaller than page size/2 there is a 512B-bitmap header. This saves space unless each page is filled with a lot of separately allocated blocks. The headers are blocks, which manage each malloc/free. Extra Credit:With our buddy system, the test ran a competition score of 0.276078, which is excellent and deserving of copious numerals of extra credit.